/*
  Liquid War 6 is a unique multiplayer wargame.
  Copyright (C)  2005, 2006, 2007, 2008, 2009  Christian Mauduit <ufoot@ufoot.org>

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  

  Liquid War 6 homepage : http://www.gnu.org/software/liquidwar6/
  Contact author        : ufoot@ufoot.org
*/

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include "srv.h"

/**
 * lw6srv_client_id_new
 *
 * @client_ip: the client ip address, pointer is kept and will be freed
 * @client_port: the client port
 *
 * Creates a client id, this is just for information, most of the
 * time this structure is not used for actual data transmission (it's
 * the socket that does this) but it's good for various checks and logs.
 *
 * Return value: a newly allocated object.
 */
lw6srv_client_id_t *lw6srv_client_id_new(char *client_ip, int client_port)
{
  lw6srv_client_id_t *client_id;

  client_id=(lw6srv_client_id_t *) LW6SYS_CALLOC(sizeof(lw6srv_client_id_t));
  if (client_id) {
    client_id->client_ip=client_ip;
    client_port->port=port;
  }

  return client_id;
}

/**
 * lw6srv_client_id_new
 *
 * @client_ip: the client ip address, pointer is kept and will be freed
 * @client_port: the client port
 *
 * Creates a client id, this is just for information, most of the
 * time this structure is not used for actual data transmission (it's
 * the socket that does this) but it's good for various checks and logs.
 *
 * Return value: a newly allocated object.
 */
void lw6srv_client_id_free(lw6srv_client_id_t *client_id)
{
  if (client_id) {
    if (client_id->client_ip) {
      LW6SYS_FREE(client_id->client_ip);
    }
    LW6SYS_FREE(client_id);
  } else {
    lw6sys_log(LW6SYS_LOG_WARNING,_("trying to free NULL client_id"));
  }
}
