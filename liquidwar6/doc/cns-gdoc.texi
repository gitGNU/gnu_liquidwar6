@deftypefun {void} {lw6cns_handler_install} (lw6cns_callback_func_t @var{callback})
@var{callback}:  handler function.

Installs a console handler.

@strong{Return value:}  none.
@end deftypefun

@deftypefun {void} {lw6cns_handler_poll} ()

Polling function for console, must be called on a regular basis.

@strong{Return value:}  none.
@end deftypefun

@deftypefun {void} {lw6cns_handler_remove} ()

Remove console handler.

@strong{Return value:}  none.
@end deftypefun

@deftypefun {void} {lw6cns_history_add_if_needed} (char * @var{line})
@var{line}:  line to add

Adds a line to the console history, won't add it if
it's NULL or empty.

@strong{Return value:}  none.
@end deftypefun

@deftypefun {int} {lw6cns_console_support} ()

Tells wether console is supported.

@strong{Return value:}  1 if console can be enabled, 0 if not
@end deftypefun

@deftypefun {int} {lw6cns_term_support} ()

Tells wether program is likely to have proper term (xterm, Linux console) support.

@strong{Return value:}  1 if has validated TERM support, 0 if not
@end deftypefun

@deftypefun {int} {lw6cns_test_register} (int @var{mode})
@var{mode}:  test mode (bitmask)

Registers all tests for the libcns module.

@strong{Return value:}  1 if test is successfull, 0 on error.
@end deftypefun

@deftypefun {int} {lw6cns_test_run} (int @var{mode})
@var{mode}:  test mode (bitmask)

Runs the @code{cns} module test suite, testing most (if not all...)
functions.

@strong{Return value:}  1 if test is successfull, 0 on error.
@end deftypefun

