
  
@deftp struct lw6cli_backend_s
    
    
@end deftp

@defcv {member} lw6cli_backend_s {dl_handle}
@example
lw6dyn_dl_handle_t* lw6cli_backend_s::dl_handle
@end example

        
        
@end defcv

@defcv {member} lw6cli_backend_s {cli_context}
@example
void* lw6cli_backend_s::cli_context
@end example

        
        
@end defcv

@defcv {member} lw6cli_backend_s {argc}
@example
int lw6cli_backend_s::argc
@end example

        
        
@end defcv

@defcv {member} lw6cli_backend_s {argv}
@example
const char** lw6cli_backend_s::argv
@end example

        
        
@end defcv

@defcv {member} lw6cli_backend_s {id}
@example
u_int32_t lw6cli_backend_s::id
@end example

        
        
@end defcv

@defcv {member} lw6cli_backend_s {name}
@example
char* lw6cli_backend_s::name
@end example

        
        
@end defcv

@defcv {member} lw6cli_backend_s {init}
@example
void*(* lw6cli_backend_s::init)(int argc, const char *argv[])
@end example

        
        
@end defcv

@defcv {member} lw6cli_backend_s {quit}
@example
void(* lw6cli_backend_s::quit)(void *cli_context)
@end example

        
        
@end defcv

@defcv {member} lw6cli_backend_s {process_oob}
@example
int(* lw6cli_backend_s::process_oob)(void *cli_context, lw6nod_info_t *node_info, lw6cli_oob_data_t *oob_data)
@end example

        
        
@end defcv

@defcv {member} lw6cli_backend_s {open}
@example
lw6cnx_connection_t*(* lw6cli_backend_s::open)(void *cli_context, char *local_url, char *remote_url, char *remote_ip, int remote_port, char *password, u_int64_t local_id, u_int64_t remote_id, int dns_ok, int network_reliability, lw6cnx_recv_callback_t recv_callback_func, void *recv_callback_data)
@end example

        
        
@end defcv

@defcv {member} lw6cli_backend_s {close}
@example
void(* lw6cli_backend_s::close)(void *cli_context, lw6cnx_connection_t *connection)
@end example

        
        
@end defcv

@defcv {member} lw6cli_backend_s {send}
@example
int(* lw6cli_backend_s::send)(void *cli_context, lw6cnx_connection_t *connection, u_int32_t physical_ticket_sig, u_int32_t logical_ticket_sig, u_int64_t logical_from_id, u_int64_t logical_to_id, char *message)
@end example

        
        
@end defcv

@defcv {member} lw6cli_backend_s {poll}
@example
void(* lw6cli_backend_s::poll)(void *cli_context, lw6cnx_connection_t *connection)
@end example

        
        
@end defcv

@defcv {member} lw6cli_backend_s {repr}
@example
char*(* lw6cli_backend_s::repr)(void *cli_context, lw6cnx_connection_t *connection)
@end example

        
        
@end defcv



  
@deftp struct lw6cli_oob_data_s
    
    
@end deftp

@defcv {member} lw6cli_oob_data_s {creation_timestamp}
@example
int64_t lw6cli_oob_data_s::creation_timestamp
@end example

        
        
@end defcv

@defcv {member} lw6cli_oob_data_s {do_not_finish}
@example
int lw6cli_oob_data_s::do_not_finish
@end example

        
        
@end defcv

@defcv {member} lw6cli_oob_data_s {public_url}
@example
char* lw6cli_oob_data_s::public_url
@end example

        
        
@end defcv

@defcv {member} lw6cli_oob_data_s {verify_callback_func}
@example
lw6cli_verify_callback_func_t lw6cli_oob_data_s::verify_callback_func
@end example

        
        
@end defcv

@defcv {member} lw6cli_oob_data_s {verify_callback_data}
@example
void* lw6cli_oob_data_s::verify_callback_data
@end example

        
        
@end defcv



  
@deftp struct lw6cli_oob_s
    
    
@end deftp

@defcv {member} lw6cli_oob_s {thread}
@example
void* lw6cli_oob_s::thread
@end example

        
        
@end defcv

@defcv {member} lw6cli_oob_s {data}
@example
lw6cli_oob_data_t lw6cli_oob_s::data
@end example

        
        
@end defcv


