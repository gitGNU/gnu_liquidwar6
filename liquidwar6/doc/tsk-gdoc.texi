@deftypefun {lw6tsk_loader_t *} {lw6tsk_loader_new} (float @var{sleep}, char * @var{user_dir}, float * @var{progress})
@var{sleep}:  how many seconds to wait between every poll

@var{user_dir}:  user directory

@var{progress}:  progress indicator to use

Creates a new loader. This object is used to do some reputed
slow calculus in the background, in a separated thread. Typical example
is map loading. This is a high-level objects which encapsulates threads
and other wizardry.

@strong{Return value:}  a pointer to the loader, NULL if failed.
@end deftypefun

@deftypefun {void} {lw6tsk_loader_free} (lw6tsk_loader_t * @var{loader})
@var{loader}:  the loader to free.

Deletes a loader. Will automatically stop the child thread,
free data, and so on.

@strong{Return value:}  none.
@end deftypefun

@deftypefun {char *} {lw6tsk_loader_repr} (lw6tsk_loader_t * @var{loader})
@var{loader}:  the loader to represent.

Creates a string which briefly describes the loader.

@strong{Return value:}  a dynamically allocated pointer, must be freed.
@end deftypefun

@deftypefun {int} {lw6tsk_loader_get_stage} (lw6tsk_loader_t * @var{loader})
@var{loader}:  the loader to query.

Returns the current stage of the loader.

@strong{Return value:}  0 if idle, 1 if loading the map from disk, 2 if build
dynamic stuff such as game_state.
@end deftypefun

@deftypefun {int} {lw6tsk_test} (int @var{mode})
@var{mode}:  0 for check only, 1 for full test

Runs the @code{tsk} module test suite.

@strong{Return value:}  1 if test is successfull, 0 on error.
@end deftypefun

