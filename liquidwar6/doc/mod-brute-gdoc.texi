@deftypefun {void} {mod_brute_is_GPL_compatible} ()

Defined to tell mod_brute is compatible with GNU General Public License.
Of course it is. This function does nothing, but the fact it's declared
makes its GPL compatibility obvious. Having this declared is required.

@strong{Return value:}  none
@end deftypefun

@deftypefun {void} {mod_brute_is_dlclose_safe} ()

Defined to tell mod_brute has no dlclose issue, once can safely call
lt_dlclose on it when done with it, without risking any segfault.
Some other LW6 modules/shared libraries do have this problem.

@strong{Return value:}  none
@end deftypefun

@deftypefun {lw6sys_module_pedigree_t *} {mod_brute_get_pedigree} ()

Returns the pedigree for mod-brute, giving details about the module,
including name, description, licence, date/time of compilation.

@strong{Return value:}  dynamically allocated object.
@end deftypefun

@deftypefun {lw6bot_backend_t *} {mod_brute_create_backend} ()

Creates a mod-brute backend.

@strong{Return value:}  backend pointer.
@end deftypefun

