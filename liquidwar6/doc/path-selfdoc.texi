@subsection config-file
@deffn {Command-line option} @code{--config-file}
Type: string

Default value: $HOME/.liquidwar6/config.xml

Set the config file path. This enables you to use whatever config file you
like, keeping all other informations in the same place.
@end deffn

@subsection data-dir
@deffn {Command-line option} @code{--data-dir}
Type: string

Default value: /usr/local/share/liquidwar6-<version>/data

Set the data directory. By changing ths value you'll be able to use an
alternative data directory.
@end deffn

@subsection log-file
@deffn {Command-line option} @code{--log-file=<value>}
@deffnx {Environment variable} @code{LW6_LOG_FILE}
@deffnx {XML key} @code{log-file}
Type: string

Default value: $HOME/.liquidwar6/log.csv

Set the log file path. This enables you to use whatever log file you like,
keeping all other informations in the same place.
@end deffn

@subsection map-dir
@deffn {Command-line option} @code{--map-dir}
Type: string

Default value: /usr/local/share/liquidwar6-<version>/map

Set the map directory path. By changing this value you'll be able to play with
your own maps in your own directory. Note that there are other ways to achieve
that, but using this option will work. However, a side effect is that you
might not see builtin maps anymore.
@end deffn

@subsection map-path
@deffn {Command-line option} @code{--map-path=<value>}
@deffnx {Environment variable} @code{LW6_MAP_PATH}
@deffnx {XML key} @code{map-path}
Type: string

Default value: $HOME/.liquidwar6/map:/usr/local/share/liquidwar6-<version>/map

Set the map search path. By changing this value you'll be able to play with
your own maps in your own directory. This is different from 'map-dir', since
it includes 'map-dir', plus it adds a number of other search paths. Unlike
most other parameters, the values given from the command-line, from the
environment variables, or from the config file, are not overwritten, but
appended. That is to say if you specify a 'map-path' with the command-line
argument 'map-path=path', but also define the 'LW6_MAP_PATH' value and finally
edit 'config.xml' to change the 'map-path' entry in it, you'll end up with the
game searching for maps in all these directories. Additionnally, 'map-dir' and
'<user-dir>/map' will always be in the list. Any given value can itself
include several pathes, separated by the path separator. This separator is ':'
on GNU/Linux, and ';' on Microsoft Windows. For instance, on a GNU/Linux box,
you could use the command-line argument
'map-path=/foo/bar/map:/home/user/map/:/map'.
@end deffn

@subsection mod-dir
@deffn {Command-line option} @code{--mod-dir}
Type: string

Default value: /usr/local/lib/liquidwar6-<version>

Set the module directory path. By changing this you will load dynamic shared
libraries (game specific modules such as the graphical backend) from an
alternative place. Use this at your own risks, for there can always be a
binary incompatibility. You've been warned.
@end deffn

@subsection music-dir
@deffn {Command-line option} @code{--music-dir=<value>}
@deffnx {Environment variable} @code{LW6_MUSIC_DIR}
@deffnx {XML key} @code{music-dir}
Type: string

Default value: /usr/local/share/liquidwar6-<version>/music

Set the music directory path. By changing this value you'll be able to use
your own musics in your own directory. Note that there are other ways to
achieve that, but using this option will work. The major side effect is that
using this option, you really replace the existing builtin musics by your own.
If you simply want to add musics you can store them in $HOME/.liquidwar6/music
or in the map directory itself.
@end deffn

@subsection music-path
@deffn {Command-line option} @code{--music-path=<value>}
@deffnx {Environment variable} @code{LW6_MUSIC_PATH}
@deffnx {XML key} @code{music-path}
Type: string

Default value: $HOME/.liquidwar6/music:/usr/local/share/liquidwar6-<version>/music

Set the music search path. By changing this value you'll be able to play with
your own musics in your own directory. This is different from 'music-dir',
since it includes 'music-dir', plus it adds a number of other search paths.
Unlike most other parameters, the values given from the command-line, from the
environment variables, or from the config file, are not overwritten, but
appended. That is to say if you specify a 'music-path' with the command-line
argument 'music-path=path', but also define the 'LW6_MUSIC_PATH' value and
finally edit 'config.xml' to change the 'music-path' entry in it, you'll end
up with the game searching for musics in all these directories. Additionnally,
'music-dir' and '<user-dir>/music' will always be in the list. Any given value
can itself include several pathes, separated by the path separator. This
separator is ':' on GNU/Linux, and ';' on Microsoft Windows. For instance, on
a GNU/Linux box, you could use the command-line argument
'music-path=/foo/bar/music:/home/user/music/:/music'.
@end deffn

@subsection prefix
@deffn {Command-line option} @code{--prefix}
Type: string

Default value: /usr/local

Override the prefix value given to the GNU Autoconf ./configure script when
building the game. Not all path will be changed, some of them might remain the
same, for instance message translations (localedir). But most game-specific
data including maps, graphics, sounds, will be searched according to the new
given parameter.
@end deffn

@subsection script-file
@deffn {Command-line option} @code{--script-file}
Type: string

Default value: /usr/local/share/liquidwar6-<version>/script/liquidwar6.scm

Set the main script file path. This file is very important, since the program
is more or less a hudge scheme interpreter, and this file is the file loaded
by Guile. In short, it is the main program.
@end deffn

@subsection user-dir
@deffn {Command-line option} @code{--user-dir=<value>}
@deffnx {Environment variable} @code{LW6_USER_DIR}
@deffnx {XML key} @code{user-dir}
Type: string

Default value: $HOME/.liquidwar6

Set the user directory path. This is where run-time data, config files, log
files, are stored. If you override this value, other parameters such as where
the config and log files reside, will change.
@end deffn

