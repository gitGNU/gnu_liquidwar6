

  
@deftp {Struct} {lw6dat_miss_s}

    
Used to get informations about "what messages are missing", The struct typically contains informations to send a MISS message on the network, that is, who needs to resend the information, and the message serial range. The informations "who needs it" need not be stored as this is logically our local node.     
@end deftp

@defcv {Member} {lw6dat_miss_s} {from_id}
@strong{Type:} @code{u_int64_t}

@strong{Definition:} @code{u_int64_t lw6dat_miss_s::from_id}


Id of node which needs to resend the information.         
        
@end defcv

@defcv {Member} {lw6dat_miss_s} {serial_min}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6dat_miss_s::serial_min}


Minimum serial, included in the range.         
        
@end defcv

@defcv {Member} {lw6dat_miss_s} {serial_max}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6dat_miss_s::serial_max}


Maximum serial, included in the range.         
        
@end defcv



  
@deftp {Struct} {lw6dat_warehouse_s}

    
Contains all recent messages sent to peers, and received from them, int fact this is a local database, think of it as a giant array, containing all messages. This is usefull both resend messages if one peer wants one and also to check wether informations are consistent and nobody is cheating. This structure is hiddent, casted to the real stuff internally if needed, so that other parts of the code don't rely on specific implementation.     
@end deftp

@defcv {Member} {lw6dat_warehouse_s} {dummy}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6dat_warehouse_s::dummy}


Dummy field, unused.         
        
@end defcv


