@subsection bind-ip
@deffn {Command-line option} @code{--bind-ip=<value>}
@deffnx {Environment variable} @code{LW6_BIND_IP}
@deffnx {XML key} @code{bind-ip}
Type: string

Default value: 0.0.0.0

The IP address to bind on when listening to network messages. You can use this
to specifically use a given network interface, the default will listen on any
available interface.
@end deffn

@subsection bind-port
@deffn {Command-line option} @code{--bind-port=<value>}
@deffnx {Environment variable} @code{LW6_BIND_PORT}
@deffnx {XML key} @code{bind-port}
Type: integer

Default value: 8056
Min value: 1
Max value: 65535

The IP port to bind on when listening to network messages. The default should
work out of the box, and will ease up the discovery process. That is, if you
use your own settings, automatic detection of your server by other servers
might not work so well.
@end deffn

@subsection broadcast
@deffn {Command-line option} @code{--broadcast=<value>}
@deffnx {Environment variable} @code{LW6_BROADCAST}
@deffnx {XML key} @code{broadcast}
Type: boolean

Default value: true

Allows the program to send broadcast messages on the network. It can be
usefull to disable those if you don't use UDP node discovery and/or if there's
a sysadmin arround who does not enjoy permanent broadcasts on his LAN.
@end deffn

@subsection cli-backends
@deffn {Command-line option} @code{--cli-backends=<value>}
@deffnx {Environment variable} @code{LW6_CLI_BACKENDS}
@deffnx {XML key} @code{cli-backends}
Type: string

Default value: tcp,udp,http

The client backends to use. Most of the time the default is fine, change it
only if you specifically want to disactivate some protocol, or if you want to
activate a custom-made client backend. It's a comma separated list.
@end deffn

@subsection known-nodes
@deffn {Command-line option} @code{--known-nodes=<value>}
@deffnx {Environment variable} @code{LW6_KNOWN_NODES}
@deffnx {XML key} @code{known-nodes}
Type: string

Default value: http://ufoot.org:8056/,http://ufoot.hd.free.fr:8056/

List of known nodes, nodes which the program will try to contact first to get
the list of other nodes. This is mostly usefull when program is launched for
the first time, after this it should keep an up-to-date list of known servers
in its internal database and automatically reconnect to them next time it
starts. You might want to change this if you really want to connect to a given
server which is not publically listed. The list is comma separated.
@end deffn

@subsection node-description
@deffn {Command-line option} @code{--node-description=<value>}
@deffnx {Environment variable} @code{LW6_NODE_DESCRIPTION}
@deffnx {XML key} @code{node-description}
Type: string

Default value: No description.

The description of your node, that is a text that describes your server. This
will typically appear when pointing a web client on the public server URL, it
is for general information, so if there's something special about your server,
say it here.
@end deffn

@subsection node-title
@deffn {Command-line option} @code{--node-title=<value>}
@deffnx {Environment variable} @code{LW6_NODE_TITLE}
@deffnx {XML key} @code{node-title}
Type: string

Default value: 

The title of your node, that is the name which will be displayed when listing
servers. This is different from player name, for there can be several players
on a single computer. By default this will be set to hostname.
@end deffn

@subsection password
@deffn {Command-line option} @code{--password=<value>}
@deffnx {Environment variable} @code{LW6_PASSWORD}
@deffnx {XML key} @code{password}
Type: string

Default value: 

The password to use for network games. Do not use a valuable password, as this
is stored as clear text on your hard drive. Still, the game will only send a
hash/checksum of the password on the network so eavesdropper won't be able to
read it. They can see the hash/checksum and use it if clever, but they can't
guess the real password. A blank password means anyone can join your games
when you act like a server.
@end deffn

@subsection public-url
@deffn {Command-line option} @code{--public-url=<value>}
@deffnx {Environment variable} @code{LW6_PUBLIC_URL}
@deffnx {XML key} @code{public-url}
Type: string

Default value: 

The public URL of your server. By default the game will pick up one for you.
In fact, the clients discovering your server should guess the public URL,
probably http://<your-ip>:<your-port>/ but you might need to use your own
settings if you are using NAT or an Apache reverse-proxy to rewrite HTTP
requests.
@end deffn

@subsection skip-network
@deffn {Command-line option} @code{--skip-network=<value>}
@deffnx {Environment variable} @code{LW6_SKIP_NETWORK}
@deffnx {XML key} @code{skip-network}
Type: boolean

Default value: false

If set, then game won't do anything network related. No listen, no connect, no
nothing. You are playing locally.
@end deffn

@subsection srv-backends
@deffn {Command-line option} @code{--srv-backends=<value>}
@deffnx {Environment variable} @code{LW6_SRV_BACKENDS}
@deffnx {XML key} @code{srv-backends}
Type: string

Default value: tcpd,udpd,httpd

The server backends to use. Most of the time the default is fine, change it
only if you specifically want to disactivate some protocol, or if you want to
activate a custom-made server backend. It's a comma separated list.
@end deffn

