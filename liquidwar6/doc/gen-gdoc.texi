@deftypefun {lw6map_level_t *} {lw6gen_create_from_seed} (const char * @var{seed}, int @var{map_w}, int @var{map_h})
@var{seed}:  a random seed used to generate the map

@var{map_w}:  width of the screen, in pixels

@var{map_h}:  height of the screen, in pixels

Builds a complete, usable map from the string passed in seed. Each triplet
composed of seed/map_w/map_h should build the same map on any computer,
in any context, for a given version of the game (no backwards compatibility).

@strong{Return value:}  new map on success, NULL on failure.
@end deftypefun

@deftypefun {char *} {lw6gen_seed_new} ()

Generate a new random seed. The seed is composed of letters and numbers.

@strong{Return value:}  newly allocated string.
@end deftypefun

@deftypefun {char *} {lw6gen_seed_normalize} (const char * @var{seed})
@var{seed}:  the seed to normalize

Builds a normalized seed from an arbitrary string. The idea is to
avoid sending strange stuff on the network and/or storing strange
stuff in config files, so we process correct strings only

@strong{Return value:}  newly allocated string.
@end deftypefun

@deftypefun {char} {lw6gen_seed_char} ()

Returns a random char suitable for seed (letter or digit).

@strong{Return value:}  a single char
@end deftypefun

@deftypefun {int} {lw6gen_test_register} (int @var{mode})
@var{mode}:  test mode (bitmask)

Registers all tests for the libgen module.

@strong{Return value:}  1 if test is successfull, 0 on error.
@end deftypefun

@deftypefun {int} {lw6gen_test_run} (int @var{mode})
@var{mode}:  test mode (bitmask)

Runs the @code{gen} module test suite, testing most (if not all...)
functions.

@strong{Return value:}  1 if test is successfull, 0 on error.
@end deftypefun

