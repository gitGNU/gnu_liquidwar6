

  
@deftp {Struct} {lw6snd_backend_s}

    
The snd backend is the first argument passed to any snd function, it contains reference to all the functions which can be used as well as a pointer on associated data. In OO, this would just be an object, with members and methods, using polymorphism through opaque pointers.     
@end deftp

@defcv {Member} {lw6snd_backend_s} {dl_handle}
@strong{Type:} @code{lw6dyn_dl_handle_t *}

@strong{Definition:} @code{lw6dyn_dl_handle_t* lw6snd_backend_s::dl_handle}


Handle on dynamic library (if it makes sense).         
        
@end defcv

@defcv {Member} {lw6snd_backend_s} {snd_context}
@strong{Type:} @code{void *}

@strong{Definition:} @code{void* lw6snd_backend_s::snd_context}


        
Snd specific data, what is behind this pointer really depends on the snd engine.         
@end defcv

@defcv {Member} {lw6snd_backend_s} {argc}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6snd_backend_s::argc}


The argc value passed to main.         
        
@end defcv

@defcv {Member} {lw6snd_backend_s} {argv}
@strong{Type:} @code{const char **}

@strong{Definition:} @code{const char** lw6snd_backend_s::argv}


The argv value passed to main.         
        
@end defcv

@defcv {Member} {lw6snd_backend_s} {id}
@strong{Type:} @code{u_int32_t}

@strong{Definition:} @code{u_int32_t lw6snd_backend_s::id}


        
The id of the object, this is non-zero and unique within one run session, incremented at each object creation.         
@end defcv

@defcv {Member} {lw6snd_backend_s} {play_fx}
@strong{Type:} @code{int(*}

@strong{Definition:} @code{int(* lw6snd_backend_s::play_fx)(void *snd_context, int fx_id)}


Pointer on lw6snd_play_fx callback code.         
        
@end defcv

@defcv {Member} {lw6snd_backend_s} {is_music_file}
@strong{Type:} @code{int(*}

@strong{Definition:} @code{int(* lw6snd_backend_s::is_music_file)(void *snd_context, char *music_file)}


Pointer on lw6snd_is_music_file callback code.         
        
@end defcv

@defcv {Member} {lw6snd_backend_s} {play_music_file}
@strong{Type:} @code{int(*}

@strong{Definition:} @code{int(* lw6snd_backend_s::play_music_file)(void *snd_context, char *music_file)}


Pointer on lw6snd_play_music_file callback code.         
        
@end defcv

@defcv {Member} {lw6snd_backend_s} {play_music_random}
@strong{Type:} @code{int(*}

@strong{Definition:} @code{int(* lw6snd_backend_s::play_music_random)(void *snd_context, char *music_path, char *music_filter, char *music_exclude)}


Pointer on lw6snd_play_music_randomcallback code.         
        
@end defcv

@defcv {Member} {lw6snd_backend_s} {stop_music}
@strong{Type:} @code{void(*}

@strong{Definition:} @code{void(* lw6snd_backend_s::stop_music)(void *snd_context)}


Pointer on lw6snd_stop_music callback code.         
        
@end defcv

@defcv {Member} {lw6snd_backend_s} {init}
@strong{Type:} @code{void *(*}

@strong{Definition:} @code{void*(* lw6snd_backend_s::init)(int argc, const char *argv[], float fx_volume, float water_volume, float music_volume)}


Pointer on lw6snd_init callback code.         
        
@end defcv

@defcv {Member} {lw6snd_backend_s} {set_fx_volume}
@strong{Type:} @code{void(*}

@strong{Definition:} @code{void(* lw6snd_backend_s::set_fx_volume)(void *snd_context, float volume)}


Pointer on lw6snd_set_fx_volume callback code.         
        
@end defcv

@defcv {Member} {lw6snd_backend_s} {set_water_volume}
@strong{Type:} @code{void(*}

@strong{Definition:} @code{void(* lw6snd_backend_s::set_water_volume)(void *snd_context, float volume)}


Pointer on lw6snd_set_water_volume callback code.         
        
@end defcv

@defcv {Member} {lw6snd_backend_s} {set_music_volume}
@strong{Type:} @code{void(*}

@strong{Definition:} @code{void(* lw6snd_backend_s::set_music_volume)(void *snd_context, float volume)}


Pointer on lw6snd_set_music_volume callback code.         
        
@end defcv

@defcv {Member} {lw6snd_backend_s} {poll}
@strong{Type:} @code{void(*}

@strong{Definition:} @code{void(* lw6snd_backend_s::poll)(void *snd_context)}


Pointer on lw6snd_poll callback code.         
        
@end defcv

@defcv {Member} {lw6snd_backend_s} {quit}
@strong{Type:} @code{void(*}

@strong{Definition:} @code{void(* lw6snd_backend_s::quit)(void *snd_context)}


Pointer on lw6snd_quit callback code.         
        
@end defcv

@defcv {Member} {lw6snd_backend_s} {repr}
@strong{Type:} @code{char *(*}

@strong{Definition:} @code{char*(* lw6snd_backend_s::repr)(void *snd_context, u_int32_t id)}


Pointer on lw6snd_repr callback code.         
        
@end defcv


