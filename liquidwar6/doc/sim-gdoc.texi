@deftypefun {void} {lw6sim_print} (lw6sim_results_t * @var{results}, FILE * @var{f})
@var{results}:  data to print

@var{f}:  file to print data to

Pretty prints results on standard output.

@strong{Return value:}  none.
@end deftypefun

@deftypefun {void} {lw6sim_results_zero} (lw6sim_results_t * @var{results})
@var{results}:  out param, will be cleared

Fills the struct with zeroes.

@strong{Return value:}  none.
@end deftypefun

@deftypefun {int} {lw6sim_results_update_percents} (lw6sim_results_t * @var{results})
@var{results}:  results set to work on (in/out param)

Updates the structure so that the percent members
are up to date.

@strong{Return value:}  1 on success, 0 on failure.
@end deftypefun

@deftypefun {int} {lw6sim_simulate} (int @var{argc}, const char * [] @var{argv}, lw6sim_results_t * @var{results}, int @var{nb_teams}, char * @var{bot_backend})
@var{argc}:  argc as passed to @code{main}

@var{argv}:  argv as passed to @code{main}

@var{results}:  out param, results of the simulation

@var{nb_teams}:  number of teams

@var{bot_backend}:  bot backend to use

Runs a simulation of several battle/games on the default map using
different team settings. Will test teams up to the given number,
for instance if you give 3 as an argument, will run tests with teams
0, 1 and 2 (that's to say a total of 3 teams).

@strong{Return value:}  1 on success, 0 on failure.
@end deftypefun

@deftypefun {int} {lw6sim_simulate_basic} (int @var{argc}, const char * [] @var{argv}, lw6sim_results_t * @var{results})
@var{argc}:  argc as passed to @code{main}

@var{argv}:  argv as passed to @code{main}

@var{results}:  out param, results of the simulation

Runs a simulation of several battle/games on the default map using
different team settings. Will test the most common colors only,
with the most popular bot.

@strong{Return value:}  1 on success, 0 on failure.
@end deftypefun

@deftypefun {int} {lw6sim_simulate_full} (int @var{argc}, const char * [] @var{argv}, lw6sim_results_t * @var{results})
@var{argc}:  argc as passed to @code{main}

@var{argv}:  argv as passed to @code{main}

@var{results}:  out param, results of the simulation

Runs a simulation of several battle/games on the default map using
different team settings. Will test all colors,
with the most popular bot.

@strong{Return value:}  1 on success, 0 on failure.
@end deftypefun

@deftypefun {int} {lw6sim_test_register} (int @var{mode})
@var{mode}:  test mode (bitmask)

Registers all tests for the libsim module.

@strong{Return value:}  1 if test is successfull, 0 on error.
@end deftypefun

@deftypefun {int} {lw6sim_test_run} (int @var{mode})
@var{mode}:  test mode (bitmask)

Runs the @code{sim} module test suite, testing most (if not all...)
functions.

@strong{Return value:}  1 if test is successfull, 0 on error.
@end deftypefun

