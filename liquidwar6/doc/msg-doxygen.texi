

  
@deftp {Struct} {lw6msg_meta_array_item_s}

    
    
@end deftp

@defcv {Member} {lw6msg_meta_array_item_s} {node_id}
@strong{Type:} @code{u_int64_t}

@strong{Definition:} @code{u_int64_t lw6msg_meta_array_item_s::node_id}


        
        
@end defcv

@defcv {Member} {lw6msg_meta_array_item_s} {serial_0}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6msg_meta_array_item_s::serial_0}


        
        
@end defcv

@defcv {Member} {lw6msg_meta_array_item_s} {seq_0}
@strong{Type:} @code{int64_t}

@strong{Definition:} @code{int64_t lw6msg_meta_array_item_s::seq_0}


        
        
@end defcv



  
@deftp {Struct} {lw6msg_meta_array_s}

    
    
@end deftp

@defcv {Member} {lw6msg_meta_array_s} {logical_from}
@strong{Type:} @code{u_int64_t}

@strong{Definition:} @code{u_int64_t lw6msg_meta_array_s::logical_from}


        
        
@end defcv

@defcv {Member} {lw6msg_meta_array_s} {items}
@strong{Type:} @code{lw6msg_meta_array_item_t}

@strong{Definition:} @code{lw6msg_meta_array_item_t lw6msg_meta_array_s::items[LW6MSG_NB_META_ARRAY_ITEMS]}


        
        
@end defcv



  
@deftp {Struct} {lw6msg_word_s}

    
This structure is used to retrieve words from messages. We use a structure here with a fixed sized buffer and a len member, this is to avoid mallocating too often when parsing.     
@end deftp

@defcv {Member} {lw6msg_word_s} {len}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6msg_word_s::len}


Length of word, in bytes.         
        
@end defcv

@defcv {Member} {lw6msg_word_s} {buf}
@strong{Type:} @code{char}

@strong{Definition:} @code{char lw6msg_word_s::buf[LW6MSG_MAX_WORD_SIZE+1]}


        
Word data, containing a 0 char at the end, so it is safe to call standard C string functions on it.         
@end defcv


