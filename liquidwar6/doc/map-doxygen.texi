

  
@deftp {Struct} {lw6map_body_s}

    
    
@end deftp

@defcv {Member} {lw6map_body_s} {checksum}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_body_s::checksum}


        
        
@end defcv

@defcv {Member} {lw6map_body_s} {shape}
@strong{Type:} @code{lw6sys_whd_t}

@strong{Definition:} @code{lw6sys_whd_t lw6map_body_s::shape}


        
        
@end defcv

@defcv {Member} {lw6map_body_s} {layers}
@strong{Type:} @code{lw6map_layer_t}

@strong{Definition:} @code{lw6map_layer_t lw6map_body_s::layers[LW6MAP_MAX_BODY_DEPTH]}


        
        
@end defcv

@defcv {Member} {lw6map_body_s} {glue}
@strong{Type:} @code{lw6map_meta_layer_t}

@strong{Definition:} @code{lw6map_meta_layer_t lw6map_body_s::glue}


        
        
@end defcv

@defcv {Member} {lw6map_body_s} {boost}
@strong{Type:} @code{lw6map_meta_layer_t}

@strong{Definition:} @code{lw6map_meta_layer_t lw6map_body_s::boost}


        
        
@end defcv

@defcv {Member} {lw6map_body_s} {danger}
@strong{Type:} @code{lw6map_meta_layer_t}

@strong{Definition:} @code{lw6map_meta_layer_t lw6map_body_s::danger}


        
        
@end defcv

@defcv {Member} {lw6map_body_s} {medicine}
@strong{Type:} @code{lw6map_meta_layer_t}

@strong{Definition:} @code{lw6map_meta_layer_t lw6map_body_s::medicine}


        
        
@end defcv

@defcv {Member} {lw6map_body_s} {one_way_north}
@strong{Type:} @code{lw6map_meta_layer_t}

@strong{Definition:} @code{lw6map_meta_layer_t lw6map_body_s::one_way_north}


        
        
@end defcv

@defcv {Member} {lw6map_body_s} {one_way_east}
@strong{Type:} @code{lw6map_meta_layer_t}

@strong{Definition:} @code{lw6map_meta_layer_t lw6map_body_s::one_way_east}


        
        
@end defcv

@defcv {Member} {lw6map_body_s} {one_way_south}
@strong{Type:} @code{lw6map_meta_layer_t}

@strong{Definition:} @code{lw6map_meta_layer_t lw6map_body_s::one_way_south}


        
        
@end defcv

@defcv {Member} {lw6map_body_s} {one_way_west}
@strong{Type:} @code{lw6map_meta_layer_t}

@strong{Definition:} @code{lw6map_meta_layer_t lw6map_body_s::one_way_west}


        
        
@end defcv



  
@deftp {Struct} {lw6map_bot_info_s}

    
Bot information, contains the relevant generic parameters for a bot.     
@end deftp

@defcv {Member} {lw6map_bot_info_s} {color}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_bot_info_s::color}


Team/color the bot is associated to.         
        
@end defcv

@defcv {Member} {lw6map_bot_info_s} {ai}
@strong{Type:} @code{char *}

@strong{Definition:} @code{char* lw6map_bot_info_s::ai}


AI engine used by bot, the name of the backend to load.         
        
@end defcv



  
@deftp {Struct} {lw6map_color_couple_s}

    
    
@end deftp

@defcv {Member} {lw6map_color_couple_s} {fg}
@strong{Type:} @code{lw6sys_color_8_t}

@strong{Definition:} @code{lw6sys_color_8_t lw6map_color_couple_s::fg}


        
        
@end defcv

@defcv {Member} {lw6map_color_couple_s} {bg}
@strong{Type:} @code{lw6sys_color_8_t}

@strong{Definition:} @code{lw6sys_color_8_t lw6map_color_couple_s::bg}


        
        
@end defcv



  
@deftp {Struct} {lw6map_color_set_s}

    
    
@end deftp

@defcv {Member} {lw6map_color_set_s} {color_base}
@strong{Type:} @code{lw6map_color_couple_t}

@strong{Definition:} @code{lw6map_color_couple_t lw6map_color_set_s::color_base}


        
        
@end defcv

@defcv {Member} {lw6map_color_set_s} {color_alternate}
@strong{Type:} @code{lw6map_color_couple_t}

@strong{Definition:} @code{lw6map_color_couple_t lw6map_color_set_s::color_alternate}


        
        
@end defcv

@defcv {Member} {lw6map_color_set_s} {background_color_root}
@strong{Type:} @code{lw6map_color_couple_t}

@strong{Definition:} @code{lw6map_color_couple_t lw6map_color_set_s::background_color_root}


        
        
@end defcv

@defcv {Member} {lw6map_color_set_s} {background_color_stuff}
@strong{Type:} @code{lw6map_color_couple_t}

@strong{Definition:} @code{lw6map_color_couple_t lw6map_color_set_s::background_color_stuff}


        
        
@end defcv

@defcv {Member} {lw6map_color_set_s} {hud_color_frame}
@strong{Type:} @code{lw6map_color_couple_t}

@strong{Definition:} @code{lw6map_color_couple_t lw6map_color_set_s::hud_color_frame}


        
        
@end defcv

@defcv {Member} {lw6map_color_set_s} {hud_color_text}
@strong{Type:} @code{lw6map_color_couple_t}

@strong{Definition:} @code{lw6map_color_couple_t lw6map_color_set_s::hud_color_text}


        
        
@end defcv

@defcv {Member} {lw6map_color_set_s} {menu_color_default}
@strong{Type:} @code{lw6map_color_couple_t}

@strong{Definition:} @code{lw6map_color_couple_t lw6map_color_set_s::menu_color_default}


        
        
@end defcv

@defcv {Member} {lw6map_color_set_s} {menu_color_selected}
@strong{Type:} @code{lw6map_color_couple_t}

@strong{Definition:} @code{lw6map_color_couple_t lw6map_color_set_s::menu_color_selected}


        
        
@end defcv

@defcv {Member} {lw6map_color_set_s} {menu_color_disabled}
@strong{Type:} @code{lw6map_color_couple_t}

@strong{Definition:} @code{lw6map_color_couple_t lw6map_color_set_s::menu_color_disabled}


        
        
@end defcv

@defcv {Member} {lw6map_color_set_s} {view_color_cursor}
@strong{Type:} @code{lw6map_color_couple_t}

@strong{Definition:} @code{lw6map_color_couple_t lw6map_color_set_s::view_color_cursor}


        
        
@end defcv

@defcv {Member} {lw6map_color_set_s} {view_color_map}
@strong{Type:} @code{lw6map_color_couple_t}

@strong{Definition:} @code{lw6map_color_couple_t lw6map_color_set_s::view_color_map}


        
        
@end defcv

@defcv {Member} {lw6map_color_set_s} {system_color}
@strong{Type:} @code{lw6map_color_couple_t}

@strong{Definition:} @code{lw6map_color_couple_t lw6map_color_set_s::system_color}


        
        
@end defcv

@defcv {Member} {lw6map_color_set_s} {team_color_dead}
@strong{Type:} @code{lw6sys_color_8_t}

@strong{Definition:} @code{lw6sys_color_8_t lw6map_color_set_s::team_color_dead}


        
        
@end defcv

@defcv {Member} {lw6map_color_set_s} {team_colors}
@strong{Type:} @code{lw6sys_color_8_t}

@strong{Definition:} @code{lw6sys_color_8_t lw6map_color_set_s::team_colors[LW6MAP_NB_TEAM_COLORS]}


        
        
@end defcv



  
@deftp {Struct} {lw6map_cursor_texture_layer_s}

    
    
@end deftp

@defcv {Member} {lw6map_cursor_texture_layer_s} {data}
@strong{Type:} @code{lw6sys_color_8_t}

@strong{Definition:} @code{lw6sys_color_8_t lw6map_cursor_texture_layer_s::data[LW6MAP_CURSOR_TEXTURE_SIZE][LW6MAP_CURSOR_TEXTURE_SIZE]}


        
        
@end defcv



  
@deftp {Struct} {lw6map_cursor_texture_s}

    
    
@end deftp

@defcv {Member} {lw6map_cursor_texture_s} {fg_bg_layer}
@strong{Type:} @code{lw6map_cursor_texture_layer_t}

@strong{Definition:} @code{lw6map_cursor_texture_layer_t lw6map_cursor_texture_s::fg_bg_layer}


        
        
@end defcv

@defcv {Member} {lw6map_cursor_texture_s} {color_layer}
@strong{Type:} @code{lw6map_cursor_texture_layer_t}

@strong{Definition:} @code{lw6map_cursor_texture_layer_t lw6map_cursor_texture_s::color_layer}


        
        
@end defcv



  
@deftp {Struct} {lw6map_layer_s}

    
A layer contains the actual data for a layer.     
@end deftp

@defcv {Member} {lw6map_layer_s} {shape}
@strong{Type:} @code{lw6sys_whd_t}

@strong{Definition:} @code{lw6sys_whd_t lw6map_layer_s::shape}


Shape of the layer. Z should be 1, logically.         
        
@end defcv

@defcv {Member} {lw6map_layer_s} {data}
@strong{Type:} @code{u_int8_t *}

@strong{Definition:} @code{u_int8_t* lw6map_layer_s::data}


Raw (byte) data.         
        
@end defcv



  
@deftp {Struct} {lw6map_level_s}

    
    
@end deftp

@defcv {Member} {lw6map_level_s} {id}
@strong{Type:} @code{u_int32_t}

@strong{Definition:} @code{u_int32_t lw6map_level_s::id}


        
        
@end defcv

@defcv {Member} {lw6map_level_s} {metadata}
@strong{Type:} @code{lw6map_metadata_t}

@strong{Definition:} @code{lw6map_metadata_t lw6map_level_s::metadata}


        
        
@end defcv

@defcv {Member} {lw6map_level_s} {local_info}
@strong{Type:} @code{lw6map_local_info_t}

@strong{Definition:} @code{lw6map_local_info_t lw6map_level_s::local_info}


        
        
@end defcv

@defcv {Member} {lw6map_level_s} {body}
@strong{Type:} @code{lw6map_body_t}

@strong{Definition:} @code{lw6map_body_t lw6map_level_s::body}


        
        
@end defcv

@defcv {Member} {lw6map_level_s} {texture}
@strong{Type:} @code{lw6map_texture_t}

@strong{Definition:} @code{lw6map_texture_t lw6map_level_s::texture}


        
        
@end defcv

@defcv {Member} {lw6map_level_s} {cursor_texture}
@strong{Type:} @code{lw6map_cursor_texture_t}

@strong{Definition:} @code{lw6map_cursor_texture_t lw6map_level_s::cursor_texture}


        
        
@end defcv

@defcv {Member} {lw6map_level_s} {param}
@strong{Type:} @code{lw6map_param_t}

@strong{Definition:} @code{lw6map_param_t lw6map_level_s::param}


        
        
@end defcv



  
@deftp {Struct} {lw6map_local_info_s}

    
Local info is for fields which can be exploited locally, but make no sense if transfered to another computer, over the network for instance. This is typically something which will be updated by the ldr module or some other external code, but it's not directly linked to the content of the map itself.     
@end deftp

@defcv {Member} {lw6map_local_info_s} {music_dir}
@strong{Type:} @code{char *}

@strong{Definition:} @code{char* lw6map_local_info_s::music_dir}


Directory where music files can be loaded.         
        
@end defcv



  
@deftp {Struct} {lw6map_metadata_s}

    
Content of metadata.xml stored into a C struct.     
@end deftp

@defcv {Member} {lw6map_metadata_s} {title}
@strong{Type:} @code{char *}

@strong{Definition:} @code{char* lw6map_metadata_s::title}


Title of the map.         
        
@end defcv

@defcv {Member} {lw6map_metadata_s} {author}
@strong{Type:} @code{char *}

@strong{Definition:} @code{char* lw6map_metadata_s::author}


Author of the map.         
        
@end defcv

@defcv {Member} {lw6map_metadata_s} {description}
@strong{Type:} @code{char *}

@strong{Definition:} @code{char* lw6map_metadata_s::description}


Description of the map.         
        
@end defcv

@defcv {Member} {lw6map_metadata_s} {license}
@strong{Type:} @code{char *}

@strong{Definition:} @code{char* lw6map_metadata_s::license}


License of the map (short, like GPLv2+ or GPLv3+).         
        
@end defcv

@defcv {Member} {lw6map_metadata_s} {vanilla_exp}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_metadata_s::vanilla_exp}


Exp as stored in the XML file of the map.         
        
@end defcv



  
@deftp {Struct} {lw6map_meta_layer_s}

    
A meta layer is a special layer which contains, for instance, informations such as where there's a special trick like glue.     
@end deftp

@defcv {Member} {lw6map_meta_layer_s} {shape}
@strong{Type:} @code{lw6sys_whd_t}

@strong{Definition:} @code{lw6sys_whd_t lw6map_meta_layer_s::shape}


Shape of the metalayer.         
        
@end defcv

@defcv {Member} {lw6map_meta_layer_s} {data}
@strong{Type:} @code{u_int8_t *}

@strong{Definition:} @code{u_int8_t* lw6map_meta_layer_s::data}


Raw (byte) data.         
        
@end defcv



  
@deftp {Struct} {lw6map_param_s}

    
    
@end deftp

@defcv {Member} {lw6map_param_s} {rules}
@strong{Type:} @code{lw6map_rules_t}

@strong{Definition:} @code{lw6map_rules_t lw6map_param_s::rules}


        
        
@end defcv

@defcv {Member} {lw6map_param_s} {style}
@strong{Type:} @code{lw6map_style_t}

@strong{Definition:} @code{lw6map_style_t lw6map_param_s::style}


        
        
@end defcv

@defcv {Member} {lw6map_param_s} {teams}
@strong{Type:} @code{lw6map_teams_t}

@strong{Definition:} @code{lw6map_teams_t lw6map_param_s::teams}


        
        
@end defcv



  
@deftp {Struct} {lw6map_rules_s}

    
Content of rules.xml stored into a C struct. This structure is used a lot, it needs to be like this for we don't want to parse (even a hash) each time we want a param so we need it in a real C struct. In this structure, it's important, fundamental, that floats are never ever used in map rules. In fact, we need maps to be 100,00 (lots of zeroes) predictable, given some identical user actions. Using floats could lead us to very slight differences (floats are never accurate, especially when you run calculus on different hardwares) which could, with time, become very important. Sort of a "butterfly effect". So well, we use int. Int32 to be exact.     
@end deftp

@defcv {Member} {lw6map_rules_s} {total_time}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::total_time}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {respawn_team}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::respawn_team}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {respawn_position_mode}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::respawn_position_mode}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {respawn_delay}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::respawn_delay}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {moves_per_round}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::moves_per_round}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {spreads_per_round}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::spreads_per_round}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {rounds_per_sec}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::rounds_per_sec}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {fighter_attack}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::fighter_attack}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {fighter_defense}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::fighter_defense}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {fighter_new_health}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::fighter_new_health}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {fighter_regenerate}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::fighter_regenerate}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {side_attack_factor}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::side_attack_factor}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {side_defense_factor}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::side_defense_factor}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {nb_move_tries}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::nb_move_tries}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {nb_attack_tries}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::nb_attack_tries}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {nb_defense_tries}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::nb_defense_tries}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {vertical_move}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::vertical_move}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {spread_mode}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::spread_mode}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {single_army_size}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::single_army_size}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {total_armies_size}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::total_armies_size}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {max_nb_teams}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::max_nb_teams}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {max_nb_cursors}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::max_nb_cursors}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {max_nb_nodes}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::max_nb_nodes}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {exp}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::exp}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {highest_team_color_allowed}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::highest_team_color_allowed}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {highest_weapon_allowed}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::highest_weapon_allowed}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {x_polarity}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::x_polarity}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {y_polarity}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::y_polarity}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {z_polarity}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::z_polarity}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {max_zone_size}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::max_zone_size}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {round_delta}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::round_delta}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {max_round_delta}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::max_round_delta}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {max_cursor_pot}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::max_cursor_pot}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {cursor_pot_init}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::cursor_pot_init}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {max_cursor_pot_offset}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::max_cursor_pot_offset}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {start_x}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::start_x[LW6MAP_MAX_NB_TEAMS]}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {start_y}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::start_y[LW6MAP_MAX_NB_TEAMS]}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {start_position_mode}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::start_position_mode}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {color_conflict_mode}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::color_conflict_mode}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {spread_thread}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::spread_thread}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {glue_power}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::glue_power}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {boost_power}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::boost_power}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {danger_power}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::danger_power}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {medicine_power}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::medicine_power}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {frags_mode}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::frags_mode}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {frags_to_distribute}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::frags_to_distribute}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {frags_fade_out}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::frags_fade_out}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {use_team_profiles}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::use_team_profiles}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {team_profile_aggressive}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::team_profile_aggressive[LW6MAP_MAX_NB_TEAMS]}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {team_profile_vulnerable}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::team_profile_vulnerable[LW6MAP_MAX_NB_TEAMS]}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {team_profile_mobile}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::team_profile_mobile[LW6MAP_MAX_NB_TEAMS]}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {team_profile_fast}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::team_profile_fast[LW6MAP_MAX_NB_TEAMS]}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {team_profile_weapon_id}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::team_profile_weapon_id[LW6MAP_MAX_NB_TEAMS]}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {team_profile_weapon_alternate_id}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::team_profile_weapon_alternate_id[LW6MAP_MAX_NB_TEAMS]}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {team_profile_weapon_mode}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::team_profile_weapon_mode[LW6MAP_MAX_NB_TEAMS]}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {weapon_duration}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::weapon_duration}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {weapon_charge_delay}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::weapon_charge_delay}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {weapon_charge_max}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::weapon_charge_max}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {weapon_tune_berzerk_power}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::weapon_tune_berzerk_power}


        
        
@end defcv

@defcv {Member} {lw6map_rules_s} {weapon_tune_turbo_power}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6map_rules_s::weapon_tune_turbo_power}


        
        
@end defcv



  
@deftp {Struct} {lw6map_style_s}

    
    
@end deftp

@defcv {Member} {lw6map_style_s} {keep_ratio}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_style_s::keep_ratio}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {zoom}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6map_style_s::zoom}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {zoom_min}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6map_style_s::zoom_min}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {zoom_max}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6map_style_s::zoom_max}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {x_wrap}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_style_s::x_wrap}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {y_wrap}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_style_s::y_wrap}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {background_style}
@strong{Type:} @code{char *}

@strong{Definition:} @code{char* lw6map_style_s::background_style}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {hud_style}
@strong{Type:} @code{char *}

@strong{Definition:} @code{char* lw6map_style_s::hud_style}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {menu_style}
@strong{Type:} @code{char *}

@strong{Definition:} @code{char* lw6map_style_s::menu_style}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {view_style}
@strong{Type:} @code{char *}

@strong{Definition:} @code{char* lw6map_style_s::view_style}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {animation_density}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6map_style_s::animation_density}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {animation_speed}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6map_style_s::animation_speed}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {cursor_size}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6map_style_s::cursor_size}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {colorize_cursor}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_style_s::colorize_cursor}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {blink_cursor}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_style_s::blink_cursor}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {hidden_layer_alpha}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6map_style_s::hidden_layer_alpha}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {colorize}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_style_s::colorize}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {pixelize}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_style_s::pixelize}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {color_set}
@strong{Type:} @code{lw6map_color_set_t}

@strong{Definition:} @code{lw6map_color_set_t lw6map_style_s::color_set}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {music_file}
@strong{Type:} @code{char *}

@strong{Definition:} @code{char* lw6map_style_s::music_file}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {music_filter}
@strong{Type:} @code{char *}

@strong{Definition:} @code{char* lw6map_style_s::music_filter}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {music_exclude}
@strong{Type:} @code{char *}

@strong{Definition:} @code{char* lw6map_style_s::music_exclude}


        
        
@end defcv

@defcv {Member} {lw6map_style_s} {waves}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_style_s::waves}


        
        
@end defcv



  
@deftp {Struct} {lw6map_teams_s}

    
Content of teams.xml stored into a C struct.     
@end deftp

@defcv {Member} {lw6map_teams_s} {player_color}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_teams_s::player_color[LW6MAP_TEAMS_NB_PLAYERS]}


Players colors.         
        
@end defcv

@defcv {Member} {lw6map_teams_s} {nb_bots}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_teams_s::nb_bots}


Number of bots.         
        
@end defcv

@defcv {Member} {lw6map_teams_s} {bot_speed}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6map_teams_s::bot_speed}


Bots speed.         
        
@end defcv

@defcv {Member} {lw6map_teams_s} {bot_iq}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_teams_s::bot_iq}


Bots IQ (how strong they are)         
        
@end defcv

@defcv {Member} {lw6map_teams_s} {bot}
@strong{Type:} @code{lw6map_bot_info_t}

@strong{Definition:} @code{lw6map_bot_info_t lw6map_teams_s::bot[LW6MAP_TEAMS_MAX_NB_BOTS]}


        
Per-bot parameters, including their color and the ai engine they use.         
@end defcv



  
@deftp {Struct} {lw6map_texture_s}

    
    
@end deftp

@defcv {Member} {lw6map_texture_s} {w}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_texture_s::w}


        
        
@end defcv

@defcv {Member} {lw6map_texture_s} {h}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_texture_s::h}


        
        
@end defcv

@defcv {Member} {lw6map_texture_s} {has_alpha}
@strong{Type:} @code{int}

@strong{Definition:} @code{int lw6map_texture_s::has_alpha}


        
        
@end defcv

@defcv {Member} {lw6map_texture_s} {data}
@strong{Type:} @code{lw6sys_color_8_t *}

@strong{Definition:} @code{lw6sys_color_8_t* lw6map_texture_s::data}


        
        
@end defcv

@defcv {Member} {lw6map_texture_s} {guessed_color_base}
@strong{Type:} @code{lw6map_color_couple_t}

@strong{Definition:} @code{lw6map_color_couple_t lw6map_texture_s::guessed_color_base}


        
        
@end defcv

@defcv {Member} {lw6map_texture_s} {guessed_color_alternate}
@strong{Type:} @code{lw6map_color_couple_t}

@strong{Definition:} @code{lw6map_color_couple_t lw6map_texture_s::guessed_color_alternate}


        
        
@end defcv


